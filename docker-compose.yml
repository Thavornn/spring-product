version: '3.8'
services:
  demo-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ecommerce-api
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8081:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://ecommerce_db:5432/ecommerce
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 123
    healthcheck:
      test: ["CMD", "curl", "--fail", "--silent", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - spring_jpa_networks

  db:
    container_name: ecommerce_db
    image: postgres:latest
    restart: always
    ports:
      - "5433:5432"
    shm_size: 128mb
    volumes:
      - postgres_data-jpa:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=123
      - POSTGRES_USER=postgres
      - POSTGRES_DB=ecommerce
    networks:
      - spring_jpa_networks
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s


volumes:
  postgres_data-jpa:

networks:
  spring_jpa_networks:
    driver: bridge